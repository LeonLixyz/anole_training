Current directory: /home/jovyan/workspace/anole_training
Data directory: /home/jovyan/workspace/anole_training/formatted_data
Python path: /opt/saturncloud/envs/vlm/bin/python
total 45116
drwxrwsr-x  3 jovyan jovyan     4096 May 22 23:22 .
drwxrwsr-x 12 jovyan jovyan     4096 May 23 00:24 ..
-rw-rw-r--  1 jovyan jovyan 22878109 May 22 22:28 all_datasets.json
drwxrwsr-x  3 jovyan jovyan     4096 May 22 22:28 graph
-rw-rw-r--  1 jovyan jovyan 23305715 May 23 02:38 train_dataset.json
data dir: /home/jovyan/workspace/anole_training/formatted_data
custom_dataset_path: /home/jovyan/workspace/anole_training/formatted_data/train_dataset.json
Geometry Reasoning: 3984
Available splits in dataset: ['train', 'validation', 'test']
model_ckpt_path: None
config: LoraConfig(task_type=None, peft_type=<PeftType.LORA: 'LORA'>, auto_mapping=None, base_model_name_or_path=None, revision=None, inference_mode=False, r=128, target_modules={'k_proj', 'q_proj', 'v_proj', 'down_proj', 'o_proj', 'up_proj', 'gate_proj'}, exclude_modules=None, lora_alpha=256, lora_dropout=0.05, fan_in_fan_out=False, bias='none', use_rslora=False, modules_to_save=['lm_head'], init_lora_weights=True, layers_to_transform=None, layers_pattern=None, rank_pattern={}, alpha_pattern={}, megatron_config=None, megatron_core='megatron.core', trainable_token_indices=None, loftq_config={}, eva_config=None, corda_config=None, use_dora=False, layer_replication=None, runtime_config=LoraRuntimeConfig(ephemeral_gpu_offload=False), lora_bias=False)
Eval Num: 8
Raw text statistics for training data:
Input text - Min: 44, Max: 111, Avg: 72.32
Label text - Min: 1481, Max: 11441, Avg: 4885.59
generation_max_new_tokens: 5220
Trainer build successfully.
tokenized_data: {'train': <utils.interleaved_tokenized_dataset.InterleaveAnoleTokenizedDataset object at 0x7efaec19b220>, 'eval': <utils.interleaved_tokenized_dataset.InterleaveAnoleTokenizedDataset object at 0x7efaff46af20>, 'test': <utils.interleaved_tokenized_dataset.InterleaveAnoleTokenizedDataset object at 0x7efaff46b010>}
[2025-05-23 03:07:30,947] [INFO] [real_accelerator.py:254:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Label image tokens: 4096
tokenized_label['input_ids']: tensor([[21421, 19186, 16422,  ..., 16604, 16399, 16674]])
tokenized_label['input_ids'] == self.model.config.image_token_id]: tensor([8711, 8711, 8711,  ..., 8711, 8711, 8711])
tokenized_label['input_ids'] == self.model.config.image_token_id].shape[0]: 4096
self.model.config.image_token_id: 8711
image_tokens: tensor([[5510, 2240, 5510,  ..., 1105, 5510, 3068],
        [2240, 2240, 5510,  ..., 1105, 5510, 1105],
        [5510, 2240, 5510,  ..., 1105, 3159, 2240],
        ...,
        [2240, 2240, 5510,  ..., 3162, 5510, 2240],
        [2240, 1105, 5510,  ..., 2240, 7426, 2240],
        [2240, 3162, 5510,  ..., 3162, 5510, 1105]], device='cuda:0',
       dtype=torch.int32)
image_tokens.shape: torch.Size([9, 1024])
image_token_mask: tensor([[False, False, False,  ..., False, False, False]])
image_token_mask.shape: torch.Size([1, 5119])
tokenized_label['pixel_values']: tensor([[[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        ...,


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]]])
tokenized_label['pixel_values'].shape: torch.Size([9, 3, 512, 512])
Total tokens in combined input: 6168
--------------------------------
Label image tokens: 4096
tokenized_label['input_ids']: tensor([[21421, 19186, 16422,  ..., 47622, 22265, 16671]])
tokenized_label['input_ids'] == self.model.config.image_token_id]: tensor([8711, 8711, 8711,  ..., 8711, 8711, 8711])
tokenized_label['input_ids'] == self.model.config.image_token_id].shape[0]: 4096
self.model.config.image_token_id: 8711
image_tokens: tensor([[7426, 2240, 5510,  ..., 2962, 2102, 5075],
        [7426, 2240, 5510,  ..., 7450, 2102, 5075],
        [7426, 2240, 5510,  ..., 7450,  450, 1164],
        ...,
        [7426, 2240, 5510,  ..., 7450, 2102, 5075],
        [7426, 2240, 5510,  ..., 7450, 2102, 5075],
        [1016, 7687, 6891,  ..., 1105, 5510, 1105]], device='cuda:0',
       dtype=torch.int32)
image_tokens.shape: torch.Size([7, 1024])
image_token_mask: tensor([[False, False, False,  ..., False, False, False]])
image_token_mask.shape: torch.Size([1, 5119])
tokenized_label['pixel_values']: tensor([[[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        ...,


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]],


        [[[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]],

         [[0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          ...,
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890],
          [0.9890, 0.9890, 0.9890,  ..., 0.9890, 0.9890, 0.9890]]]])
tokenized_label['pixel_values'].shape: torch.Size([7, 3, 512, 512])
Total tokens in combined input: 6158
--------------------------------
[1;34mwandb[0m: 
[1;34mwandb[0m: 🚀 View run [33manole_trainimage_seq_len-1024-train-anole-hyper-train1val1lr3e-05-geometry_reasoning-prompt_anole-42[0m at: [34mhttps://wandb.ai/leonli66/anole-ai/runs/4jctvxgg[0m
[1;34mwandb[0m: Find logs at: [1;35mwandb/run-20250523_030701-4jctvxgg/logs[0m
